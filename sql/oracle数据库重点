1.merge into 表名 using (<foreach> select * from dual </foreach>)
on (条件)
when matched then (满足条件) update set ...
when not matched then (不满足条件) insert (...)

2.wm_concat() 函数：讲多个字段值拼接到一行，中间用逗号隔开。必须配合group by 一起使用

3.decode(表达式a, b,c,d):当a=b，返回c，否则返回d

4. || 符号的使用，拼接的作用

5.val(a,b) 和 val2(表达式a,b,c)
val(a,b):如果a不为空，则返回a的值，否则返回b的值
val2(表达式a,b,c)：表达式a不为空，则返回b的值，否则返回c的值

6.数据库中的查询当前和下级数据
select * from 表名
start with 字段a="数据"
connect by prior 字段a=字段b
从字段a="数据"开始，查询字段a=字段b中表里面所有数据

7.row_number over(partition by a,b,c,d order d desc) as num
将字段a,b,c,d进行分组，按照d降序(降序的作用是为了取一条最新的数据)
作用：如果表temp中，五个字段a，b,c,d,e 。其中a,b,c,d,e 一样作为一组，
如果e不一样，其他一样，取e最新的一条即可。
select m.* from (
    select a,b,c,d,e,row_number over(partition by a,b,c,d order d desc) as num
    from temp
) m
where m = 1
注：m取几，则是第几条数据

8.存储过程
create or replace procedure temp(参数a,参数b,...)
as 定义参数
begin
内容
end temp

9.sql优化
a.使用instr(字段,#{参数}) > 0 替换 like
如果字段有索引，使用instr对索引有效，而like无效
查询存在大数据量，instr比like效率高 测试（账户表：使用like用了0.72，使用instr用了0.34）

b.使用exists 和 not exists 替换 in 和 not in
在子查询的时候替换，如果是数字类型的范围，可以使用between and

c.在where和order by 上添加索引

d.几个大数据表关联查询，可以先将表通过查询条件作为临时表，这样查询数据会减少，再进行关联查询。
可以使用with 临时表 as()

e.查询不要用*，用需要查询的字段

f.使用or关联的子查询，可以使用union all

10.将表a中test字段更新到表b中的name字段中，需要表a中id等于表b中aid字段，表b中name不等于表a的test
方法一：update (select a.test,b.name from 表a a,表b b where a.test != b.name and a.id = b.aid) t
set name = test
方法二：update 表b set b.name = select a.test from 表a a left join 表b b
on a.id = b.aid and a.test != b.name
where ...
这种方法表示疑问???

方法三:update 表b b set b.name = a.test from 表a a where a.id = b.aid and a.test != b.name


